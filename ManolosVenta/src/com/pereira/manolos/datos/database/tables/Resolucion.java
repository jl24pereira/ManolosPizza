/**
 * This class is generated by jOOQ
 */
package com.pereira.manolos.datos.database.tables;


import com.pereira.manolos.datos.database.Keys;
import com.pereira.manolos.datos.database.Public;
import com.pereira.manolos.datos.database.tables.records.ResolucionRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Resolucion extends TableImpl<ResolucionRecord> {

    private static final long serialVersionUID = 236547441;

    /**
     * The reference instance of <code>public.resolucion</code>
     */
    public static final Resolucion RESOLUCION = new Resolucion();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResolucionRecord> getRecordType() {
        return ResolucionRecord.class;
    }

    /**
     * The column <code>public.resolucion.idresolucion</code>.
     */
    public final TableField<ResolucionRecord, Integer> IDRESOLUCION = createField("idresolucion", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('resolucion_idresolucion_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.resolucion.resolucion</code>.
     */
    public final TableField<ResolucionRecord, String> RESOLUCION_ = createField("resolucion", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.resolucion.tktinicial</code>.
     */
    public final TableField<ResolucionRecord, Integer> TKTINICIAL = createField("tktinicial", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.resolucion.tktfinal</code>.
     */
    public final TableField<ResolucionRecord, Integer> TKTFINAL = createField("tktfinal", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.resolucion.tktactual</code>.
     */
    public final TableField<ResolucionRecord, Integer> TKTACTUAL = createField("tktactual", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.resolucion.tktalerta</code>.
     */
    public final TableField<ResolucionRecord, Integer> TKTALERTA = createField("tktalerta", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.resolucion.serie</code>.
     */
    public final TableField<ResolucionRecord, String> SERIE = createField("serie", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.resolucion.fecha</code>.
     */
    public final TableField<ResolucionRecord, Date> FECHA = createField("fecha", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>public.resolucion.idcaja</code>.
     */
    public final TableField<ResolucionRecord, Integer> IDCAJA = createField("idcaja", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.resolucion.activa</code>.
     */
    public final TableField<ResolucionRecord, Boolean> ACTIVA = createField("activa", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>public.resolucion</code> table reference
     */
    public Resolucion() {
        this("resolucion", null);
    }

    /**
     * Create an aliased <code>public.resolucion</code> table reference
     */
    public Resolucion(String alias) {
        this(alias, RESOLUCION);
    }

    private Resolucion(String alias, Table<ResolucionRecord> aliased) {
        this(alias, aliased, null);
    }

    private Resolucion(String alias, Table<ResolucionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ResolucionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RESOLUCION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ResolucionRecord> getPrimaryKey() {
        return Keys.RESOLUCION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ResolucionRecord>> getKeys() {
        return Arrays.<UniqueKey<ResolucionRecord>>asList(Keys.RESOLUCION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ResolucionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ResolucionRecord, ?>>asList(Keys.RESOLUCION__FK_RESOLUCION_CAJA_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Resolucion as(String alias) {
        return new Resolucion(alias, this);
    }

    /**
     * Rename this table
     */
    public Resolucion rename(String name) {
        return new Resolucion(name, null);
    }
}
