/**
 * This class is generated by jOOQ
 */
package com.pereira.manolos.datos.database.tables;


import com.pereira.manolos.datos.database.Keys;
import com.pereira.manolos.datos.database.Public;
import com.pereira.manolos.datos.database.tables.records.PagosCompraRecord;

import java.math.BigDecimal;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PagosCompra extends TableImpl<PagosCompraRecord> {

    private static final long serialVersionUID = 183660585;

    /**
     * The reference instance of <code>public.pagos_compra</code>
     */
    public static final PagosCompra PAGOS_COMPRA = new PagosCompra();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PagosCompraRecord> getRecordType() {
        return PagosCompraRecord.class;
    }

    /**
     * The column <code>public.pagos_compra.idcompra</code>.
     */
    public final TableField<PagosCompraRecord, Integer> IDCOMPRA = createField("idcompra", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.pagos_compra.fecha</code>.
     */
    public final TableField<PagosCompraRecord, Date> FECHA = createField("fecha", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>public.pagos_compra.pago</code>.
     */
    public final TableField<PagosCompraRecord, BigDecimal> PAGO = createField("pago", org.jooq.impl.SQLDataType.NUMERIC.precision(6, 2), this, "");

    /**
     * Create a <code>public.pagos_compra</code> table reference
     */
    public PagosCompra() {
        this("pagos_compra", null);
    }

    /**
     * Create an aliased <code>public.pagos_compra</code> table reference
     */
    public PagosCompra(String alias) {
        this(alias, PAGOS_COMPRA);
    }

    private PagosCompra(String alias, Table<PagosCompraRecord> aliased) {
        this(alias, aliased, null);
    }

    private PagosCompra(String alias, Table<PagosCompraRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PagosCompraRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PagosCompraRecord, ?>>asList(Keys.PAGOS_COMPRA__FK_PAGOS_COMPRA_COMPRA_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PagosCompra as(String alias) {
        return new PagosCompra(alias, this);
    }

    /**
     * Rename this table
     */
    public PagosCompra rename(String name) {
        return new PagosCompra(name, null);
    }
}
