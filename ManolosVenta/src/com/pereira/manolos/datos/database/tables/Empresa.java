/**
 * This class is generated by jOOQ
 */
package com.pereira.manolos.datos.database.tables;


import com.pereira.manolos.datos.database.Keys;
import com.pereira.manolos.datos.database.Public;
import com.pereira.manolos.datos.database.tables.records.EmpresaRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Empresa extends TableImpl<EmpresaRecord> {

    private static final long serialVersionUID = -341786525;

    /**
     * The reference instance of <code>public.empresa</code>
     */
    public static final Empresa EMPRESA = new Empresa();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmpresaRecord> getRecordType() {
        return EmpresaRecord.class;
    }

    /**
     * The column <code>public.empresa.nombre</code>.
     */
    public final TableField<EmpresaRecord, String> NOMBRE = createField("nombre", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.empresa.direccion</code>.
     */
    public final TableField<EmpresaRecord, String> DIRECCION = createField("direccion", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.empresa.telefono</code>.
     */
    public final TableField<EmpresaRecord, String> TELEFONO = createField("telefono", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.empresa.email</code>.
     */
    public final TableField<EmpresaRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.empresa.propietario</code>.
     */
    public final TableField<EmpresaRecord, String> PROPIETARIO = createField("propietario", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.empresa.giro</code>.
     */
    public final TableField<EmpresaRecord, String> GIRO = createField("giro", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.empresa.nrc</code>.
     */
    public final TableField<EmpresaRecord, String> NRC = createField("nrc", org.jooq.impl.SQLDataType.VARCHAR.length(25), this, "");

    /**
     * The column <code>public.empresa.nit</code>.
     */
    public final TableField<EmpresaRecord, String> NIT = createField("nit", org.jooq.impl.SQLDataType.VARCHAR.length(25).nullable(false), this, "");

    /**
     * The column <code>public.empresa.iva</code>.
     */
    public final TableField<EmpresaRecord, BigDecimal> IVA = createField("iva", org.jooq.impl.SQLDataType.NUMERIC.precision(3, 2), this, "");

    /**
     * The column <code>public.empresa.conversion</code>.
     */
    public final TableField<EmpresaRecord, BigDecimal> CONVERSION = createField("conversion", org.jooq.impl.SQLDataType.NUMERIC.precision(5, 2), this, "");

    /**
     * The column <code>public.empresa.horastrabajo</code>.
     */
    public final TableField<EmpresaRecord, Integer> HORASTRABAJO = createField("horastrabajo", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.empresa.logo</code>.
     */
    public final TableField<EmpresaRecord, byte[]> LOGO = createField("logo", org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * The column <code>public.empresa.idempresa</code>.
     */
    public final TableField<EmpresaRecord, Integer> IDEMPRESA = createField("idempresa", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.empresa</code> table reference
     */
    public Empresa() {
        this("empresa", null);
    }

    /**
     * Create an aliased <code>public.empresa</code> table reference
     */
    public Empresa(String alias) {
        this(alias, EMPRESA);
    }

    private Empresa(String alias, Table<EmpresaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Empresa(String alias, Table<EmpresaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmpresaRecord> getPrimaryKey() {
        return Keys.PK_EMPRESA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmpresaRecord>> getKeys() {
        return Arrays.<UniqueKey<EmpresaRecord>>asList(Keys.PK_EMPRESA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Empresa as(String alias) {
        return new Empresa(alias, this);
    }

    /**
     * Rename this table
     */
    public Empresa rename(String name) {
        return new Empresa(name, null);
    }
}
