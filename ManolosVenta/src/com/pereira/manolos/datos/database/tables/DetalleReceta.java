/**
 * This class is generated by jOOQ
 */
package com.pereira.manolos.datos.database.tables;


import com.pereira.manolos.datos.database.Keys;
import com.pereira.manolos.datos.database.Public;
import com.pereira.manolos.datos.database.tables.records.DetalleRecetaRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DetalleReceta extends TableImpl<DetalleRecetaRecord> {

    private static final long serialVersionUID = -1955519025;

    /**
     * The reference instance of <code>public.detalle_receta</code>
     */
    public static final DetalleReceta DETALLE_RECETA = new DetalleReceta();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DetalleRecetaRecord> getRecordType() {
        return DetalleRecetaRecord.class;
    }

    /**
     * The column <code>public.detalle_receta.idreceta</code>.
     */
    public final TableField<DetalleRecetaRecord, Integer> IDRECETA = createField("idreceta", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.detalle_receta.ingrediente</code>.
     */
    public final TableField<DetalleRecetaRecord, Integer> INGREDIENTE = createField("ingrediente", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.detalle_receta.descargo</code>.
     */
    public final TableField<DetalleRecetaRecord, Double> DESCARGO = createField("descargo", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.detalle_receta.idunidad</code>.
     */
    public final TableField<DetalleRecetaRecord, Integer> IDUNIDAD = createField("idunidad", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.detalle_receta.tipo</code>.
     */
    public final TableField<DetalleRecetaRecord, String> TIPO = createField("tipo", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.detalle_receta.ingredientereceta</code>.
     */
    public final TableField<DetalleRecetaRecord, Integer> INGREDIENTERECETA = createField("ingredientereceta", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.detalle_receta</code> table reference
     */
    public DetalleReceta() {
        this("detalle_receta", null);
    }

    /**
     * Create an aliased <code>public.detalle_receta</code> table reference
     */
    public DetalleReceta(String alias) {
        this(alias, DETALLE_RECETA);
    }

    private DetalleReceta(String alias, Table<DetalleRecetaRecord> aliased) {
        this(alias, aliased, null);
    }

    private DetalleReceta(String alias, Table<DetalleRecetaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DetalleRecetaRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DetalleRecetaRecord, ?>>asList(Keys.DETALLE_RECETA__FK_DETALLE_RECETA_RECETA_2, Keys.DETALLE_RECETA__FK_DETALLE_RECETA_INSUMO_1, Keys.DETALLE_RECETA__FK_DETALLE_RECETA_UNIDAD_MEDIDA_1, Keys.DETALLE_RECETA__FK_DETALLE_RECETA_RECETA_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DetalleReceta as(String alias) {
        return new DetalleReceta(alias, this);
    }

    /**
     * Rename this table
     */
    public DetalleReceta rename(String name) {
        return new DetalleReceta(name, null);
    }
}
