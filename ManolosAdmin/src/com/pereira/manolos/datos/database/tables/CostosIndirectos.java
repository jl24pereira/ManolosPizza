/**
 * This class is generated by jOOQ
 */
package com.pereira.manolos.datos.database.tables;


import com.pereira.manolos.datos.database.Keys;
import com.pereira.manolos.datos.database.Public;
import com.pereira.manolos.datos.database.tables.records.CostosIndirectosRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CostosIndirectos extends TableImpl<CostosIndirectosRecord> {

    private static final long serialVersionUID = -699716522;

    /**
     * The reference instance of <code>public.costos_indirectos</code>
     */
    public static final CostosIndirectos COSTOS_INDIRECTOS = new CostosIndirectos();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CostosIndirectosRecord> getRecordType() {
        return CostosIndirectosRecord.class;
    }

    /**
     * The column <code>public.costos_indirectos.idcosto</code>.
     */
    public final TableField<CostosIndirectosRecord, Integer> IDCOSTO = createField("idcosto", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('costos_indirectos_idcostos_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.costos_indirectos.rubro</code>.
     */
    public final TableField<CostosIndirectosRecord, String> RUBRO = createField("rubro", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.costos_indirectos.valor</code>.
     */
    public final TableField<CostosIndirectosRecord, BigDecimal> VALOR = createField("valor", org.jooq.impl.SQLDataType.NUMERIC.precision(6, 2), this, "");

    /**
     * Create a <code>public.costos_indirectos</code> table reference
     */
    public CostosIndirectos() {
        this("costos_indirectos", null);
    }

    /**
     * Create an aliased <code>public.costos_indirectos</code> table reference
     */
    public CostosIndirectos(String alias) {
        this(alias, COSTOS_INDIRECTOS);
    }

    private CostosIndirectos(String alias, Table<CostosIndirectosRecord> aliased) {
        this(alias, aliased, null);
    }

    private CostosIndirectos(String alias, Table<CostosIndirectosRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CostosIndirectosRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COSTOS_INDIRECTOS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CostosIndirectosRecord> getPrimaryKey() {
        return Keys.COSTOS_INDIRECTOS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CostosIndirectosRecord>> getKeys() {
        return Arrays.<UniqueKey<CostosIndirectosRecord>>asList(Keys.COSTOS_INDIRECTOS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CostosIndirectos as(String alias) {
        return new CostosIndirectos(alias, this);
    }

    /**
     * Rename this table
     */
    public CostosIndirectos rename(String name) {
        return new CostosIndirectos(name, null);
    }
}
