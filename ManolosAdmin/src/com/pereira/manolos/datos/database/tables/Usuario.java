/**
 * This class is generated by jOOQ
 */
package com.pereira.manolos.datos.database.tables;


import com.pereira.manolos.datos.database.Keys;
import com.pereira.manolos.datos.database.Public;
import com.pereira.manolos.datos.database.tables.records.UsuarioRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Usuario extends TableImpl<UsuarioRecord> {

    private static final long serialVersionUID = -986979332;

    /**
     * The reference instance of <code>public.usuario</code>
     */
    public static final Usuario USUARIO = new Usuario();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UsuarioRecord> getRecordType() {
        return UsuarioRecord.class;
    }

    /**
     * The column <code>public.usuario.usuario</code>.
     */
    public final TableField<UsuarioRecord, String> USUARIO_ = createField("usuario", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.usuario.pass</code>.
     */
    public final TableField<UsuarioRecord, String> PASS = createField("pass", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.usuario.idempleado</code>.
     */
    public final TableField<UsuarioRecord, Integer> IDEMPLEADO = createField("idempleado", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.usuario</code> table reference
     */
    public Usuario() {
        this("usuario", null);
    }

    /**
     * Create an aliased <code>public.usuario</code> table reference
     */
    public Usuario(String alias) {
        this(alias, USUARIO);
    }

    private Usuario(String alias, Table<UsuarioRecord> aliased) {
        this(alias, aliased, null);
    }

    private Usuario(String alias, Table<UsuarioRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UsuarioRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UsuarioRecord, ?>>asList(Keys.USUARIO__FK_USUARIO_EMPLEADO_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Usuario as(String alias) {
        return new Usuario(alias, this);
    }

    /**
     * Rename this table
     */
    public Usuario rename(String name) {
        return new Usuario(name, null);
    }
}
